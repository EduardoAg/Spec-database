<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="RolesDataSet" targetNamespace="http://tempuri.org/RolesDataSet.xsd" xmlns:mstns="http://tempuri.org/RolesDataSet.xsd" xmlns="http://tempuri.org/RolesDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="dbSpecsConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="dbSpecsConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Master_Database.Properties.Settings.GlobalReference.Default.dbSpecsConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="rolesTableAdapter" GeneratorDataComponentClassName="rolesTableAdapter" Name="roles" UserDataComponentName="rolesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbSpecsConnectionString (Settings)" DbObjectName="dbMateriales3.dbo.roles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[roles] WHERE (([IDRole] = @Original_IDRole) AND ((@IsNull_nombre = 1 AND [nombre] IS NULL) OR ([nombre] = @Original_nombre)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDRole" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDRole" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_nombre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nombre" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_nombre" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="nombre" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[roles] ([nombre]) VALUES (@nombre);
SELECT IDRole, nombre FROM roles WHERE (IDRole = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@nombre" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="nombre" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDRole, nombre FROM dbo.roles</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[roles] SET [nombre] = @nombre WHERE (([IDRole] = @Original_IDRole) AND ((@IsNull_nombre = 1 AND [nombre] IS NULL) OR ([nombre] = @Original_nombre)));
SELECT IDRole, nombre FROM roles WHERE (IDRole = @IDRole)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@nombre" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="nombre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDRole" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDRole" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_nombre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nombre" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_nombre" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="nombre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="IDRole" ColumnName="IDRole" DataSourceName="dbMateriales3.dbo.roles" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IDRole" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IDRole" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDRole" DataSetColumn="IDRole" />
              <Mapping SourceColumn="nombre" DataSetColumn="nombre" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="dbSpecsConnectionString (Settings)" DbObjectName="dbMateriales3.dbo.roles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByIDRole" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByIDRole" GeneratorSourceName="FillByIDRole" GetMethodModifier="Public" GetMethodName="GetDataByIDRole" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByIDRole" UserSourceName="FillByIDRole">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT IDRole, nombre
FROM     roles
WHERE  (IDRole = @IDRole)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="IDRole" ColumnName="IDRole" DataSourceName="dbMateriales3.dbo.roles" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IDRole" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IDRole" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="rolesPermisosTableAdapter" GeneratorDataComponentClassName="rolesPermisosTableAdapter" Name="rolesPermisos" UserDataComponentName="rolesPermisosTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbSpecsConnectionString (Settings)" DbObjectName="dbMateriales3.dbo.rolesPermisos" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[rolesPermisos] WHERE (([IDRole] = @Original_IDRole) AND ([IDPermiso] = @Original_IDPermiso))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDRole" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDRole" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDPermiso" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDPermiso" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[rolesPermisos] ([IDRole], [IDPermiso]) VALUES (@IDRole, @IDPermiso);
SELECT IDRole, IDPermiso FROM rolesPermisos WHERE (IDPermiso = @IDPermiso) AND (IDRole = @IDRole)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDRole" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDRole" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDPermiso" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDPermiso" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDRole, IDPermiso FROM dbo.rolesPermisos</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[rolesPermisos] SET [IDRole] = @IDRole, [IDPermiso] = @IDPermiso WHERE (([IDRole] = @Original_IDRole) AND ([IDPermiso] = @Original_IDPermiso));
SELECT IDRole, IDPermiso FROM rolesPermisos WHERE (IDPermiso = @IDPermiso) AND (IDRole = @IDRole)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDRole" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDRole" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IDPermiso" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDPermiso" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDRole" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDRole" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDPermiso" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDPermiso" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDRole" DataSetColumn="IDRole" />
              <Mapping SourceColumn="IDPermiso" DataSetColumn="IDPermiso" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="dbSpecsConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByIDRole" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByIDRole" GeneratorSourceName="FillByIDRole" GetMethodModifier="Public" GetMethodName="GetDataByIDRole" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByIDRole" UserSourceName="FillByIDRole">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT rolesPermisos.IDRole, rolesPermisos.IDPermiso, permisos.nombre
FROM     rolesPermisos INNER JOIN
                  permisos ON rolesPermisos.IDPermiso = permisos.IDPermiso
WHERE  (rolesPermisos.IDRole = @IDRole)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="IDRole" ColumnName="IDRole" DataSourceName="dbMateriales3.dbo.rolesPermisos" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IDRole" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IDRole" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="RolesDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="RolesDataSet" msprop:Generator_UserDSName="RolesDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="roles" msprop:Generator_TableClassName="rolesDataTable" msprop:Generator_TableVarName="tableroles" msprop:Generator_RowChangedName="rolesRowChanged" msprop:Generator_TablePropName="roles" msprop:Generator_RowDeletingName="rolesRowDeleting" msprop:Generator_RowChangingName="rolesRowChanging" msprop:Generator_RowEvHandlerName="rolesRowChangeEventHandler" msprop:Generator_RowDeletedName="rolesRowDeleted" msprop:Generator_RowClassName="rolesRow" msprop:Generator_UserTableName="roles" msprop:Generator_RowEvArgName="rolesRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDRole" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnIDRole" msprop:Generator_ColumnPropNameInRow="IDRole" msprop:Generator_ColumnPropNameInTable="IDRoleColumn" msprop:Generator_UserColumnName="IDRole" type="xs:int" />
              <xs:element name="nombre" msprop:Generator_ColumnVarNameInTable="columnnombre" msprop:Generator_ColumnPropNameInRow="nombre" msprop:Generator_ColumnPropNameInTable="nombreColumn" msprop:Generator_UserColumnName="nombre" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="rolesPermisos" msprop:Generator_TableClassName="rolesPermisosDataTable" msprop:Generator_TableVarName="tablerolesPermisos" msprop:Generator_RowChangedName="rolesPermisosRowChanged" msprop:Generator_TablePropName="rolesPermisos" msprop:Generator_RowDeletingName="rolesPermisosRowDeleting" msprop:Generator_RowChangingName="rolesPermisosRowChanging" msprop:Generator_RowEvHandlerName="rolesPermisosRowChangeEventHandler" msprop:Generator_RowDeletedName="rolesPermisosRowDeleted" msprop:Generator_RowClassName="rolesPermisosRow" msprop:Generator_UserTableName="rolesPermisos" msprop:Generator_RowEvArgName="rolesPermisosRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDRole" msprop:Generator_ColumnVarNameInTable="columnIDRole" msprop:Generator_ColumnPropNameInRow="IDRole" msprop:Generator_ColumnPropNameInTable="IDRoleColumn" msprop:Generator_UserColumnName="IDRole" type="xs:int" />
              <xs:element name="IDPermiso" msprop:Generator_ColumnVarNameInTable="columnIDPermiso" msprop:Generator_ColumnPropNameInRow="IDPermiso" msprop:Generator_ColumnPropNameInTable="IDPermisoColumn" msprop:Generator_UserColumnName="IDPermiso" type="xs:int" />
              <xs:element name="nombre" msprop:Generator_ColumnVarNameInTable="columnnombre" msprop:Generator_ColumnPropNameInRow="nombre" msprop:Generator_ColumnPropNameInTable="nombreColumn" msprop:Generator_UserColumnName="nombre" type="xs:string" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:roles" />
      <xs:field xpath="mstns:IDRole" />
    </xs:unique>
    <xs:unique name="rolesPermisos_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:rolesPermisos" />
      <xs:field xpath="mstns:IDRole" />
      <xs:field xpath="mstns:IDPermiso" />
    </xs:unique>
    <xs:keyref name="FK_rolesPermisos_roles" refer="Constraint1" msprop:rel_Generator_UserChildTable="rolesPermisos" msprop:rel_Generator_ChildPropName="GetrolesPermisosRows" msprop:rel_Generator_UserRelationName="FK_rolesPermisos_roles" msprop:rel_Generator_ParentPropName="rolesRow" msprop:rel_Generator_RelationVarName="relationFK_rolesPermisos_roles" msprop:rel_Generator_UserParentTable="roles">
      <xs:selector xpath=".//mstns:rolesPermisos" />
      <xs:field xpath="mstns:IDRole" />
    </xs:keyref>
  </xs:element>
</xs:schema>